                                     _____
                                    |___  |
                                       / /
                                      / /
                                     /_/


================================================================================
|||                          7mind Security Best Practices                    |||
================================================================================

The following are a set of recommendations concerning security practices at
7mind. They should be enforced wherever possible and explicitly authorized and
documented when overwritten for ANY reason.

+------------------------------------------------------------------------------+
| Sensitive Configuration Information                                          |
+------------------------------------------------------------------------------+

When storing configuration information follow the following mandates:

NEVER store sensitive data in a Dockerfile
---

Dockerfile's are easily exposed to the public even when we intend they not
be. Thus they should be treated as public for the simple reason that they could
be made so, or be hacked. Hence there should be no compromising data stored in
ANY Dockerfile.

If you require the use of a token or similar one-time access key to build your
image, ensure that it is not cached in any image layer.

Run time Data Stays on the Server
---

No runtime data should be associated with a GitHub repository, only with a
runtime configuration. In practice this means all data which is required at
runtime by your app should be stored in Vault with associated restricted
permissions for your container alone.

Deployment Deployment Secrets are GPG Encrypted
---

If there are secrets such as NPM tokens or service account keys required to
deploy your application securely this information MUST be black box encrypted
with the appropriate CI account having access to the data.

BEWARE that deploying thusly does not expose any of your decrypted secrets at
any point. You should thoroughly understand the steps undergone by each GitHub
action you use in your project.

+------------------------------------------------------------------------------+
| Key Rotation                                                                 |
+------------------------------------------------------------------------------+

All Deployment Secrets must in some manner be able to undergo key rotation by at
least one administrator. Key rotation should occur under ANY of the following
conditions.

  - A Developer with READ access to a secret in the repository leaves 7mind.
  - A Developer with READ access to a secret in the repository is hacked.
  - A secret is compromised externally.
  - A secret is older than 1 year.

Regular key rotation is required, and easily facilitated by BlackBox.

+------------------------------------------------------------------------------+
| Server Access                                                                |
+------------------------------------------------------------------------------+

Server Access should be restricted to Developers who work with
infrastructure. No other members of the team should have any access to
infrastructure in order to check the status of your deployment. As a rule, some
part of your project is misconfigured or improperly monitored if you have to

     - Check server logs.
     - Manually deploy your application.
     - Restart your application.
     - Exec into application.
     - Copy files to or from your application.

If any of these options are part of your repository configuration your
application is MISCONFIGURED and INSECURE. Please contact someone with server
access immediately to reconfigure your development environment.

+------------------------------------------------------------------------------+
| Identify Verification                                                        |
+------------------------------------------------------------------------------+

The standard for identify verification in our projects is GPG. Any commits made
to a project should be signed by the same GPG key you use to access Blackbox
data.
