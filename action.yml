name: 'Helm Deployment Update'
description: 'Override image.tag'

inputs:

  helm-github-org:
    description: 'Organization/Owner of the repository holding the helm chart definitions'
    required: true
  helm-github-repo:
    description: 'Repository holding the helm chart definitions'
    required: true
  helm-repo-branch:
    description: 'Branch of the helm repo to checkout'
    required: true
    default: main
  deploy-environment:
    description: 'Environment to deploy to'
    required: false
    default: production
  deploy-image-tag:
    description: 'Image tag to deploy'
    required: true
  github-deployment-id:
    description: 'Github Deployment Id'
    required: false
  chart-path:
    description: 'Path inside the helm-repo to a specific chart'
    required: false
    default: "/"
  github-app-id:
    description: 'Github App Id for authentication'
    required: true
  github-app-private-key:
    description: 'Github App private key for authentication'
    required: true

outputs: {}

runs:
  using: "composite"
  steps:

    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ inputs.github-app-id }}
        private-key: ${{ inputs.github-app-private-key }}
        owner: ${{ inputs.helm-github-org }}
        repositories: "${{ inputs.helm-github-repo }}"

    - name: Get GitHub App User ID
      id: get-user-id
      shell: bash
      run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}

    - name: Checkout helm repo
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.helm-github-org }}/${{ inputs.helm-github-repo }}
        ref: ${{ inputs.helm-repo-branch }}
        token: ${{ steps.app-token.outputs.token }}

    - name: Apply override
      shell: bash
      run: |
        echo "ðŸš€ applying override"
        cat << EOF > ${{ inputs.chart-path }}/values-${{ inputs.deploy-environment }}-tag.yaml
        image:
          tag: ${{ inputs.deploy-image-tag }}
        postUpgradeHook:
          deploymentId: "${{ inputs.github-deployment-id }}"
        EOF

    - name: Commit and push
      shell: bash
      run: |
        git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
        git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

        echo "ðŸš€ commit & push"
        git add -A
        git commit -m "New Deployment"
        git push

